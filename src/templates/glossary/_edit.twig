{% extends "_layouts/cp" %}
{% import "_includes/forms" as forms %}
{% set selectedSubnavItem = 'glossaries' %}
{% set fullPageForm = true %}
{% set saveShortcutRedirect = continueEditingUrl %}

{% block actionButton %}
    <div class="btngroup">
        <input type="submit" class="btn submit" value="{% if isNew %}{{ 'Create'|t('app') }}{% else %}{{ 'Save'|t('app') }}{% endif %}">

        <div class="btn submit menubtn"></div>
        <div class="menu">
            <ul>
                <li><a class="formsubmit"
                       data-redirect="{{ continueEditingUrl|hash }}">
                        {{ forms.optionShortcutLabel('S') }}
                        {{ "Save and continue editing"|t('app') }}
                    </a></li>
            </ul>
            {% if not isNew %}
                <hr>
                <ul>
                    <li><a class="formsubmit error"
                           data-action="glossary/glossary/delete"
                           data-confirm="{{ 'Are you sure you want to delete this glossary and all its terms?' }}"
                           data-redirect="{{ 'glossary/glossaries'|hash }}">{{ 'Delete'|t('app') }}</a>
                    </li>
                </ul>
            {% endif %}
        </div>
    </div>
{% endblock %}

{% block content %}
    {{ actionInput('glossary/glossary/save') }}
    {{ redirectInput('glossary/glossaries') }}

    {% if glossary.id %}{{ hiddenInput('glossaryId', glossary.id) }}{% endif %}

    <div id="fields">
        {{ forms.textField({
            label: 'Title'|t('app'),
            id: 'title',
            name: 'title',
            value: glossary.title,
            errors: glossary.getErrors('title'),
            required: true,
            first: true,
            autofocus: true,
        }) }}

        {{ forms.textField({
            label: 'Handle'|t('app'),
            instructions: "How you'll refer to this glossary in the templates."|t('glossary'),
            id: 'handle',
            name: 'handle',
            class: 'code',
            autocorrect: false,
            autocapitalize: false,
            value: glossary.handle,
            errors: glossary.getErrors('handle'),
            required: true
        }) }}

        {{ forms.lightswitchField({
            label: 'Default glossary'|t('glossary'),
            instructions: 'The default glossary will be used when no handle has been specified.'|t('glossary'),
            id: 'default',
            name: 'default',
            errors: glossary.getErrors('default'),
            on: glossary.default
        }) }}

        {{ forms.autosuggestField({
            label: 'Term Template'|t('glossary'),
            id: 'termTemplate',
            name: 'termTemplate',
            value: glossary.termTemplate,
            errors: glossary.getErrors('termTemplate'),
            instructions: "The template to use for rendering every single term inline. If empty, the plugin's default will be used."|t('glossary'),
            required: false,
        }) }}

        {{ forms.autosuggestField({
            label: 'Tooltip Template'|t('glossary'),
            id: 'tooltipTemplate',
            name: 'tooltipTemplate',
            value: glossary.tooltipTemplate,
            suggestions: craft.cp.getTemplateSuggestions(),
            errors: glossary.getErrors('tooltipTemplate'),
            instructions: "The template to use for rendering the content of the tooltips."|t('glossary'),
            required: true,
        }) }}

        {{ forms.autosuggestField({
            label: 'CSS to load'|t('glossary'),
            id: 'css',
            name: 'css',
            value: glossary.css,
            instructions: 'An optional CSS file to register when the glossary has been used in a page.'|t('glossary'),
            errors: glossary.getErrors('css'),
            suggestEnvVars: true,
            suggestAliases: true,
            required: false
        }) }}

        {{ forms.autosuggestField({
            label: 'Script to load'|t('glossary'),
            id: 'script',
            name: 'script',
            value: glossary.script,
            instructions: 'An optional script to register when the glossary has been used in a page.'|t('glossary'),
            errors: glossary.getErrors('script'),
            suggestEnvVars: true,
            suggestAliases: true,
            required: false
        }) }}

        {{ forms.fieldLayoutDesignerField({
            fieldLayout: fieldLayout,
        }) }}
    </div>
{% endblock %}
